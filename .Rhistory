plotDiv(filtex2)
#Não existe redundância!
ex3abun <- data.frame(control = c(20,15,10,5))
rownames(ex3abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex3dij <- data.frame(SP_A = c(0,2,2,2), SP_B = c(2,0,2,2), SP_C = c(2,2,0,2), SP_D = c(2,2,2,0))
rownames(ex3dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex3 <- FDchao(ex3abun, ex3dij, seq(min(ex3dij[ex3dij>0]), max(ex3dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex3 <- Div(FDex3)
ex3abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex3dij)} #med value
plotDiv(filtex3)
plotDiv(filtex1)
# Taxons Comuns Redundantes
ex1abun <- data.frame(control = c(20,15,10,5))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
ex1abun <- data.frame(control = c(20,15,10,1))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
ex1abun <- data.frame(control = c(80,15,10,1))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
ex1abun <- data.frame(control = c(80,15,10,3))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
ex1abun <- data.frame(control = c(30,15,10,3))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
ex1abun <- data.frame(control = c(40,15,10,3))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
# Taxons Comuns Redundantes
ex1abun <- data.frame(control = c(20,15,10,5))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
plotDiv(filtex2)
plotDiv(filtex3)
ex1abun <- data.frame(control = c(20,15,10,5), treatment1 = c(15, 12, 8, 2), treatment2 = c(14,13,12,0))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
ex1abun <- data.frame(control = c(20,15,10,5), treatment1 = c(15, 12, 8, 2), treatment2 = c(7,5,4,15))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
ex1abun %>% lapply(FUN = function(x) x/sum(x)) %>% do.call(cbind, .) %>% apply(1, mean) %>% {sum((.%*%t(.))*ex1dij)}
# Redundant Common Taxa
ex1abun <- data.frame(control = c(20,15,10,5))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>% lapply(FUN = function(x) x/sum(x)) %>% do.call(cbind, .) %>% apply(1, mean) %>% {sum((.%*%t(.))*ex1dij)}
library(devtools)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
library(Biodiv)
library(ggplot2)
library(magrittr)
# Redundant Common Taxa
ex1abun <- data.frame(control = c(20,15,10,5))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
#Redundant Rare Taxa
ex2abun <- data.frame(control = c(20,15,10,5))
rownames(ex2abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex2dij <- data.frame(SP_A = c(0,6,8,8), SP_B = c(6,0,8,8), SP_C = c(8,8,0,2), SP_D = c(8,8,2,0))
rownames(ex2dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex2 <- FDchao(ex2abun, ex2dij, seq(min(ex2dij[ex2dij>0]), max(ex2dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex2 <- Div(FDex2)
ex2abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex2dij)} #med value
plotDiv(filtex2)
devtools::check()
# Redundant Common Taxa
ex1abun <- data.frame(control = c(20,15,10,5))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1abun
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij
library(Biodiv)
library(ggplot2)
library(magrittr)
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
#Redundant Rare Taxa
ex2abun <- data.frame(control = c(20,15,10,5))
rownames(ex2abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex2dij <- data.frame(SP_A = c(0,6,8,8), SP_B = c(6,0,8,8), SP_C = c(8,8,0,2), SP_D = c(8,8,2,0))
rownames(ex2dij) <- c("SP_A","SP_B","SP_C","SP_D")
ex2dij
FDex2 <- FDchao(ex2abun, ex2dij, seq(min(ex2dij[ex2dij>0]), max(ex2dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex2 <- Div(FDex2)
plotDiv(filtex2)
#There is no redundancy!
ex3abun <- data.frame(control = c(20,15,10,5))
rownames(ex3abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex3dij <- data.frame(SP_A = c(0,2,2,2), SP_B = c(2,0,2,2), SP_C = c(2,2,0,2), SP_D = c(2,2,2,0))
rownames(ex3dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex3 <- FDchao(ex3abun, ex3dij, seq(min(ex3dij[ex3dij>0]), max(ex3dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex3 <- Div(FDex3)
plotDiv(filtex3)
ex3dij
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
usethis::use_gpl_license(version = 3, include_future = TRUE)
devtools::check()
devtools::check()
stringi::stri_escape_unicode("Lélàô ")
# Redundant Common Taxa
ex1abun <- data.frame(control = c(20,15,10,5))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
library(Biodiv)
library(ggplot2)
library(magrittr)
# Redundant Common Taxa
ex1abun <- data.frame(control = c(20,15,10,5))
rownames(ex1abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex1dij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(ex1dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex1 <- FDchao(ex1abun, ex1dij, seq(min(ex1dij[ex1dij>0]), max(ex1dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex1 <- Div(FDex1)
ex1abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex1dij)} #med value
plotDiv(filtex1)
#Redundant Rare Taxa
ex2abun <- data.frame(control = c(20,15,10,5))
rownames(ex2abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex2dij <- data.frame(SP_A = c(0,6,8,8), SP_B = c(6,0,8,8), SP_C = c(8,8,0,2), SP_D = c(8,8,2,0))
rownames(ex2dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex2 <- FDchao(ex2abun, ex2dij, seq(min(ex2dij[ex2dij>0]), max(ex2dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex2 <- Div(FDex2)
ex2abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex2dij)} #med value
plotDiv(filtex2)
#There is no redundancy!
ex3abun <- data.frame(control = c(20,15,10,5))
rownames(ex3abun) <- c("SP_A","SP_B","SP_C","SP_D")
ex3dij <- data.frame(SP_A = c(0,2,2,2), SP_B = c(2,0,2,2), SP_C = c(2,2,0,2), SP_D = c(2,2,2,0))
rownames(ex3dij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex3 <- FDchao(ex3abun, ex3dij, seq(min(ex3dij[ex3dij>0]), max(ex3dij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex3 <- Div(FDex3)
ex3abun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*ex3dij)} #med value
plotDiv(filtex3)
#Data manipulation with 3 samples:
exabun <- data.frame(samp1 = c(20,15,10,5), samp2 = c(15, 12, 8, 2), samp3 = c(7,5,4,15))
rownames(exabun) <- c("SP_A","SP_B","SP_C","SP_D")
exdij <- data.frame(SP_A = c(0,2,8,8), SP_B = c(2,0,8,8), SP_C = c(8,8,0,6), SP_D = c(8,8,6,0))
rownames(exdij) <- c("SP_A","SP_B","SP_C","SP_D")
FDex <- FDchao(exabun, exdij, seq(min(exdij[exdij>0]), max(exdij), length.out = 5), seq(from = 0, to = 2, length.out = 5), 50)
filtex <- Div(FDex)
exabun %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*exdij)} #med value
plotDiv(filtex)
Babund <- read.csv("~/Documentos/Trabalhos R/Mestrado_Wes/Dados/Beetle_Abundance.txt", sep="")
View(Babund)
Bdist <- read.csv("~/Documentos/Trabalhos R/Mestrado_Wes/Dados/Beetle_Distance_Matrix", sep="")
Bdist <- read.csv("~/Documentos/Trabalhos R/Mestrado_Wes/Dados/Beetle_Distance_Matrix.txt", sep="")
View(Bdist)
devtools::use_data(Babund)
setwd("~/Documentos/Trabalhos R/Biodiv/data")
saveRDS(Babund, file = "~/Documentos/Trabalhos R/Biodiv/data/Babund.rda")
saveRDS(Bdist, file = "~/Documentos/Trabalhos R/Biodiv/data/Bdist.rda")
load("/home/wesley/Downloads/beetles.rda")
View(beetles)
rm(beetles)
qtl::read.cross(Babund)
install.packages("qtl")
qtl::read.cross(Babund)
Babund
qtl::read.cross(Bdist)
?qtl
class(Babund)
install.packages("sinew")
sinew::makeOxygen(Babund, add_fields = "source")
str(Babund)
library(roxygen2)
roxygenize()
setwd("~/Documentos/Trabalhos R/Biodiv")
roxygenize()
load("~/Documentos/Trabalhos R/Biodiv/data/Bdist.rda")
Babund <- read.csv("~/Documentos/Trabalhos R/Mestrado_Wes/Dados/Beetle_Abundance.txt", sep="")
Bdist <- read.csv("~/Documentos/Trabalhos R/Mestrado_Wes/Dados/Beetle_Distance_Matrix.txt", sep="")
View(Babund)
View(Bdist)
saveRDS(Babund, file = ""~/Documentos/Trabalhos R/Biodiv/data/Babund.rda")
saveRDS(Babund, file = "~/Documentos/Trabalhos R/Biodiv/data/Babund.rda")
load("~/Documentos/Trabalhos R/Biodiv/data/Babund.rda")
save(Babund, file = "data/Babund.rda")
load("~/Documentos/Trabalhos R/Biodiv/data/Babund.rda")
roxygenize()
save(Bdist, file = "data/Bdist.rda")
sinew::makeOxygen(Bdist, add_fields = "source")
View(Bdist)
roxygenize()
load("~/Documentos/Trabalhos R/Biodiv/data/Bdist.rda")
rm(c(Babund,Bdist))
rm(c("Babund,Bdist"))
rm(c("Babund","Bdist"))
rm(cBabund,Bdist)
rm(cBabund)
rm(Babund)
load("~/Documentos/Trabalhos R/Biodiv/data/Bdist.rda")
View(Bdist)
devtools::install()
library(Biodiv)
Babund
rm(Bdist)
Bdist
roxygenize()
devtools::install()
?Biodiv
library(ggplot2)
library(ggpubr)
library(magrittr)
library(Biodiv)
library(ggplot2)
library(Biodiv)
library(ggplot2)
library(magrittr)
BiolDiv <- FDchao(Babund, Bdist, seq(min(Bdist[Bdist>0]), max(Bdist), length.out = 25), seq(from = 0, to = 2, length.out = 25), 50) #help("FDchao"), help("Babund"), help("Bdist") for more details.
FiltBD <- Div(BiolDiv) #help("Div") for more details.
plotDiv(FiltBD) #help("plotDiv") for more details.
help("FDchao")
roxygenize()
#Crie seu arquivo .R e adicione o resultado da função acima
library(roxygen2)
roxygenize()
devtools::install()
help("FDchao")
help("FDchao")
help("FDchao")
help("BioDiv::FDchao")
help("Biodiv::FDchao")
library(Biodiv)
help("FDchao")
detach("package:Biodiv", unload = TRUE)
library(Biodiv)
help("FDchao")
help("FDsingle")
#' plotDiv(data, tog, cap) function to plot the value of diversity
#'
#' This is a function to plot the results of the FDchao function
#' filtered by the Div function, generating three graphs:
#' Taxonomic Diversity, Functional Diversity, and Functional Redundancy.
#' @param data This parameter must necessarily be an object containing the outcome of the Div function to prepare the graph.
#' @param tog This parameter is an abbreviation of the word "together" and is a logical object. If it is set to TRUE, the function will plot the three graphs together (side by side).
#' @param cap This parameter is an abbreviation of the word "captions" and is a logical object. If it is set to TRUE, the function will ask you to set the labels for the graph.
#' @return Three graphs, namely (functional diversity, taxonomic diversity, and functional redundancy).
#' @export
plotDiv <- function(data, tog = TRUE,  cap = FALSE){
plotTax <- ggplot(data)+
geom_line(aes(x=qEix, y = TauMin, color = Color, linetype = Color), linewidth = 1.2)+
scale_color_brewer(palette = "Set1") +
theme(panel.border = element_rect(colour = "black",fill = NA,size = .5), legend.position = "bottom", plot.title = element_text(hjust = 0.5, size = 12, face = "plain"), axis.text.x = element_text(colour = "black", size = 10), axis.text.y = element_text(colour = "black", size = 10), legend.key = element_rect(fill = "white", colour = "white"), legend.title = element_blank(), panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text())+
labs(x="Ordem q", y="Diversidade Taxonômica") +
scale_y_continuous(limits = c(0, ceiling(max(data$TauMin)))) +
ggtitle("Perfil q (tau = Mínimo)")
plotFun <- ggplot(data)+
geom_line(aes(x=qEix, y = TauMed, color = Color, linetype = Color), linewidth = 1.2)+
scale_color_brewer(palette = "Set1") +
theme(panel.border = element_rect(colour = "black",fill = NA,size = .5), legend.position = "bottom", plot.title = element_text(hjust = 0.5, size = 12, face = "plain"), axis.text.x = element_text(colour = "black", size = 10), axis.text.y = element_text(colour = "black", size = 10), legend.key = element_rect(fill = "white", colour = "white"), legend.title = element_blank(), panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text())+
labs(x="Ordem q", y="Diversidade Funcional") +
scale_y_continuous(limits = c(0, ceiling(max(data$TauMed)))) +
ggtitle("Perfil q (tau = Médio)")
plotRedFun <- ggplot(data)+
geom_line(aes(x = qEix, y = RedFunChao, color = Color, linetype = Color), linewidth=1.2)+
scale_color_brewer(palette = "Set1") +
theme(panel.border = element_rect(colour = "black",fill = NA,size = .5), legend.position = "bottom", plot.title = element_text(hjust = 0.5, size = 12, face = "plain"), axis.text.x = element_text(colour = "black", size = 10), axis.text.y = element_text(colour = "black", size = 10), legend.key = element_rect(fill = "white", colour = "white"), legend.title = element_blank(), panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(), panel.background = element_blank(), text = element_text())+
labs(x="Ordem q", y="Redundância Funcional") +
scale_y_continuous(limits = c(0, max(data$RedFunChao)*1.1)) +
ggtitle("Perfil q (Redundância Funcional)")
if (cap) {
tax_title <- readline("Enter the title for the Taxonomic Diversity plot: ")
tax_x_label <- readline("Enter the label for the x-axis of the Taxonomic Diversity plot: ")
tax_y_label <- readline("Enter the label for the y-axis of the Taxonomic Diversity plot: ")
fun_title <- readline("Enter the title for the Functional Diversity graph: ")
fun_x_label <- readline("Enter the label for the x-axis of the Functional Diversity plot: ")
fun_y_label <- readline("Enter the label for the y-axis of the Functional Diversity plot: ")
red_title <- readline("Enter the title for the Functional Redundancy plot: ")
red_x_label <- readline("Enter the label for the x-axis of the Functional Redundancy plot: ")
red_y_label <- readline("Enter the label for the y-axis of the Functional Redundancy plot: ")
# Alterar títulos, etiquetas de eixos x e y dos gráficos
plotTax <- plotTax + ggtitle(tax_title) + labs(x = tax_x_label, y = tax_y_label)
plotFun <- plotFun + ggtitle(fun_title) + labs(x = fun_x_label, y = fun_y_label)
plotRedFun <- plotRedFun + ggtitle(red_title) + labs(x = red_x_label, y = red_y_label)
}
if (tog) {
return(ggpubr::ggarrange(plotTax, plotFun, plotRedFun, ncol = 3, nrow = 1))
} else {
choice <- menu(c("Taxonomic Diversity Plot", "Functional Diversity Plot", "Functional Redundancy Plot"), title = "Choose a Graphic:")
if (choice == 1) {
return(plotTax)
} else if (choice == 2) {
return(plotFun)
} else if (choice == 3) {
return(plotRedFun)
} else {
stop("Invalid Choice.")
}
}
}
roxygenize()
#Crie seu arquivo .R e adicione o resultado da função acima
library(roxygen2)
roxygenize()
roxygenize()
rm(list = c("plotDiv"))7
rm(list = c("plotDiv"))
roxygenize()
devtools::install()
help("FDchao")
library(Biodiv)
help("FDchao")
min(Bdist[Bdist>0])
max(Bdist)
Babund %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*Bdist)}
library(magrittr)
Babund %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*Bdist)}
roxygenize()
#Crie seu arquivo .R e adicione o resultado da função acima
library(roxygen2)
roxygenize()
devtools::install()
help("FDchao")
library(Biodiv)
help("FDchao")
library(magrittr)
library(magrittr)
Babund %>%
lapply(FUN = function(x) x/sum(x)) %>%
do.call(cbind, .) %>%
apply(1, mean) %>%
{sum((.%*%t(.))*Bdist)}
Babund %>%
help("Div")
help("plotDiv")
roxygenize()
#Crie seu arquivo .R e adicione o resultado da função acima
library(roxygen2)
roxygenize()
devtools::install()
library(Biodiv)
help("plotDiv")
help("Babund")
help("Bdist")
roxygenize()
#Crie seu arquivo .R e adicione o resultado da função acima
library(roxygen2)
roxygenize()
devtools::install()
detach("package:Biodiv", unload = TRUE)
remove.packages("Biodiv", lib="~/R/x86_64-pc-linux-gnu-library/4.3")
## import packages
library(ggplot2)
## Library Package
library(Biodiv)
library(devtools)
install_github('wesneves/Biodiv')
library(Biodiv)
help("plotDiv")
BiolDiv <- FDchao(Babund, Bdist, seq(min(Bdist[Bdist>0]), max(Bdist), length.out = 25), seq(from = 0, to = 2, length.out = 25), 50)
FiltBD <- Div(BiolDiv)
plotDiv(FiltBD)
